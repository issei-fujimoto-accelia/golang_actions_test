name: check-env
on:
  push:
    branches:
      - develop

env:
  IMAGE: ghcr.io/issei-fujimoto-accelia/nginx-1.21.3:v1.0
  MOCKPATH: .github/workflows/mock
  
jobs:
  pull-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - name: set
        run: echo "ENV_1=hello!!" >> $GITHUB_ENV

      - name: get
        run: echo "aaaa $ENV_1" $ENV_1

      - name: output
        run: echo "::set-output name=ENV_2::hello2!!!!!"
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: pull-image
        run: docker pull $IMAGE

        
  # check-conf:                  
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2        
        
  #     - name: Log in to registry
  #       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #     - name: pull-image
  #       run: docker pull $IMAGE

 
  # check-conf2:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2

  #     - name: Log in to registry
  #       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #     - name: docker run
  #       run: cd ./mock && docker-compose up -d

  #     - name: check nginx conf
  #       run: docker run --net=mock-net -v $(pwd)/k8s/nginx/resources/nginx/:/nginx/ $IMAGE nginx -t
  #       run: docker run --net=mock-net -v $(pwd)/nginx.conf:/etc/nginx/nginx.conf nginx:1.21.3 nginx -t



